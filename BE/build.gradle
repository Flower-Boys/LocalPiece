plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.flowerguys'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21) // ✅ Java 21
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ✅ Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ PostgreSQL
	implementation 'org.postgresql:postgresql:42.7.3'

	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ Devtools & Test
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// OCI
	implementation platform("com.oracle.oci.sdk:oci-java-sdk-bom:3.38.0")
    implementation "com.oracle.oci.sdk:oci-java-sdk-objectstorage"
}

// ✅ Gson 충돌 방지 (jjwt-gson 대신 jackson 사용을 보장)
configurations {
	implementation {
		exclude group: 'io.jsonwebtoken', module: 'jjwt-gson'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
