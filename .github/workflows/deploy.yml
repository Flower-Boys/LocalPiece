# .github/workflows/deploy.yml
name: Deploy to OCI

on:
  push:
    branches: [ "feature/INFRA", "be" ]

env:
  # OCIR 주소와 이미지 이름을 변수로 설정
  OCI_REGISTRY: ${{ secrets.OCI_REGION_KEY }}.ocir.io
  OCI_IMAGE_NAME: ${{ secrets.OCI_TENANCY_NAMESPACE }}/localpiece-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 코드 가져오기 (Checkout)
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 21 및 Gradle 설정, 빌드
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          
      - name: Grant execute permission for gradlew
        working-directory: ./BE
        run: chmod +x ./gradlew
        
      - name: Build with Gradle
        working-directory: ./BE
        run: ./gradlew build --no-daemon -x test

      - name: Login to Oracle Cloud Infrastructure Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ secrets.OCI_USERNAME }}
          password: ${{ secrets.OCI_PASSWORD }}

      # ⬇️ Docker 이미지 빌드 및 ECR 푸시
      - name: Build and push image to OCIR
        working-directory: ./BE
        run: |
          docker build -t ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}:latest .
          docker push ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}:latest

      # ⬇️ EC2 배포 대신 OCI 배포로 이름 변경 및 스크립트 수정
      - name: Deploy to OCI Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OCI_HOST }}
          username: ${{ secrets.OCI_SERVER_USERNAME }}
          key: ${{ secrets.OCI_PRIVATE_KEY }}
          script: |
            # 프로젝트 폴더로 이동
            cd LocalPiece

            # GitHub에서 최신 소스 코드(docker-compose.yml 등)를 받아옴
            git pull origin ${{ github.ref_name }}

            # .env 파일 생성 (민감 정보 주입)
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            # OCIR 로그인
            docker login ${{ env.OCI_REGISTRY }} -u "${{ secrets.OCI_USERNAME }}" -p "${{ secrets.OCI_PASSWORD }}"

            # Docker Hub에서 최신 앱 이미지를 받아옴
            docker-compose pull app

            # Docker Compose로 서비스 재시작 (변경된 내용 적용)
            docker-compose up -d --remove-orphans
