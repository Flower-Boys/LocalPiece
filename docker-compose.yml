version: "3.8"

services:
  # Spring Boot App 서비스
  app:
    build:
      context: ./BE
    image: localpiece-app
    # 컨테이너 이름 지정
    container_name: localpiece-app-container
    # .env 파일에 정의된 환경 변수를 컨테이너 내부로 전달
    env_file:
      - ./.env
    # ⬇️ db 서비스가 먼저 실행된 후에 app 서비스를 시작합니다.
    depends_on:
      - db

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # 항상 재시작
    restart: always

  # PostgreSQL 데이터베이스 서비스
  db:
    image: postgres:15-alpine 
    container_name: localpiece-db-container
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # Nginx 서비스
  nginx:
    # 공식 Nginx 최신 이미지를 사용
    image: nginx:latest
    container_name: localpiece-nginx-container
    ports:
      # 외부의 80 포트를 Nginx 컨테이너의 80 포트로 연결
      - "80:80"
    volumes:
      # 현재 폴더의 nginx.conf 파일을 컨테이너 내부의 설정 파일 경로에 덮어쓰기
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    # app 서비스가 먼저 시작된 후에 nginx 서비스를 시작
    depends_on:
      app:
        condition: service_healthy
    restart: always

# ⬇️ 데이터베이스의 데이터를 서버 디스크에 저장(영속화)하기 위한 설정
volumes:
  postgres_data: